version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: polcomply
      POSTGRES_USER: polcomply
      POSTGRES_PASSWORD: ${DB_PASSWORD:-secretpass}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U polcomply"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://polcomply:${DB_PASSWORD:-secretpass}@postgres:5432/polcomply
      REDIS_URL: redis://redis:6379/0
      JWT_SECRET: ${JWT_SECRET:-your-secret-key}
      KSEF_API_URL: ${KSEF_API_URL:-https://ksef-test.mf.gov.pl}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  celery:
    build: ./backend
    command: celery -A app.workers.tasks worker --loglevel=info
    volumes:
      - ./backend:/app
    environment:
      DATABASE_URL: postgresql://polcomply:${DB_PASSWORD:-secretpass}@postgres:5432/polcomply
      REDIS_URL: redis://redis:6379/0
      KSEF_API_URL: ${KSEF_API_URL:-https://ksef-test.mf.gov.pl}
    depends_on:
      - postgres
      - redis

  frontend:
    build: ./frontend
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    ports:
      - "3000:3000"
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8000/v1
    depends_on:
      - backend

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend
      - frontend

volumes:
  postgres_data: